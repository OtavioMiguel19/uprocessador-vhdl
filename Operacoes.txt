OBSERVAÇÃO
*a atualizacao do valor do carry não funciona para somas, embora devesse*

Codificacoes

Binario
XXXX X XXXX XXXX

13 bits

12 - 8 = OPCODE
8 = Seletor de Constante ou Registrador
7 - 4 = Constante ou Registrador
3 - 0 = Registrador destino


Opcodes
-- -----------------------------------------------------------
	0001 - ADD

	0010 - DEC

	0100 - MOV

	0101 - JC

	0110 - CMP

	0111 - MOV RAM2REG

	1000 - MOV REG2RAM

	1111 - JMP

=====================================
PROGRAMA PRIMOS

    --- primeiro, coloca o valor 32 no R3
	ADD #15, R3
	0001111110011
	ADD #15, R3
	0001111110011
	ADD #2, R3
	0001100100011


	--- agora, preenche os endereços da ram com os numeros
	ADD #1, R1
	0001100010001

	MOV R1, @R1
	1000000010001

	CMP R3, R1
	0110000110001

	JC -3
	0101100000011


	--- agora, removo todos os multuplos de 2 usando R4
	ADD #2, R4
	0001100100100

	ADD #2, R4
	0001100100100

	MOV R0, @R4
	1000000000100

	CMP R3, R4
	0110000110100

	JC -3
	0101100000011


	--- agora, removo todos os multuplos de 3 usando R5
	ADD #3, R5
	0001100110101

	ADD #3, R5
	0001100110101

	MOV R0, @R5
	1000000000101

	CMP R3, R5
	0110000110101

	JC -3
	0101100000011


	--- agora, removo todos os multuplos de 5 usando R6
	ADD #5, R6
	0001101010110

	ADD #5, R6
	0001101010110

	MOV R0, @R6
	1000000000110

	CMP R3, R6
	0110000110110

	JC -3
	0101100000011



	--- agora, removo todos os multuplos de 7 usando R7
	ADD #7, R7
	0001101110111
    
	ADD #7, R7
	0001101110111

	MOV R0, @R7
	1000000000111

	CMP R3, R7
	0110000110111

	JC -3
	0101100000011


	--- agora, para fechar com chave de ouro, preenche o r1 com os numeros, um por um, usando o r2
	ADD #1, R2
	0001100010010

	MOV @R2, R1
	0111000100001

	CMP R3, R2
	0110000110010

	JC -3
	0101100000011